!function(){"use strict";var t={17:function(t,e,n){t.exports=n.p+"5bb6a7c331425e1064ce.png"},136:function(t,e,n){t.exports=n.p+"e95f659b81629e68533f.png"}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}n.p="",function(){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function o(t){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?e(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function r(e,n,o){return(n=function(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,"string");if("object"!==t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(n)?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function i(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return a(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}var u=function(t,e){return[].concat(i(t.map((function(t){return o({},t)}))),i(e.map((function(t){return o({},t)}))))},c=function(t){return document[arguments.length>1&&void 0!==arguments[1]?arguments[1]:"querySelector"](t)},s=function(t){return"function"==typeof t&&t()},l=function(t,e,n){return s(n),e.style.display=t},p=function(t,e){return e.classList.contains(t)},f=function(t,e,n,o){var r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];t.animate([{opacity:e},{opacity:n}],{duration:o,easing:"ease-in-out"}).onfinish=function(){r&&t.remove()}},m=function(t,e){for(var n in e)t.setAttribute(n,e[n])},d=function(t){return t.startsWith(".")},y=function(t){return function(){return d(t)?t.slice(1):t}},b=function(t,e){return e.closest((n=t,function(){return d(n)?n:"."+n})());var n},v=function(t,e){return p(t,e)&&b(y(t)(),e)},_=function(t,e,n){return n.addEventListener(t,e)},h=function(t,e){var n=t[e.target.id];n&&n(e)},g=function(t,e,n){return{formSelector:t,inputSelector:e,submitButtonSelector:n,inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}};function w(t){return function(t){if(Array.isArray(t))return S(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return S(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?S(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}var P={openPopupProfile:"popup__opened",popupProfile:c("#popup"),popupProfileForm:c(".popup__form"),nameInputProfile:c(".popup__input_type_name"),jobInputProfile:c(".popup__input_type_job"),nameOutputProfile:c(".header__title"),jobOutputProfile:c(".header__subtitle"),btnSubmitProfile:c(".popup__button"),btnCloseProfile:c(".popup__closed-btn"),btnEditProfile:c(".button-edit")},O=P.popupProfileForm,j=P.nameInputProfile,E=P.jobInputProfile,C=P.nameOutputProfile,I=P.jobOutputProfile,L=[{name:C.textContent,job:I.textContent}],k=[],T=u(k,L),A={openPopupCardAdd:"popup_card-add__opened",popupCardAdd:c("#popup_card-add"),popupCardAddForm:c("#popup__form_card-add"),popupCardAddButtonSubmit:c("#popup__button_card-add"),placeInputCardAdd:c(".popup__input_type_place"),imgLinkInputCardAdd:c(".popup__input_type_img-link")},D=A.popupCardAddForm,F=A.placeInputCardAdd,R=A.imgLinkInputCardAdd,B=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg",alt:"Imagem do vale de Yosemite com um rio, árvores, montanhas ao fundo e muita natureza"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg",alt:"Imagem do Lago Louise com montanhas ao fundo e natureza exuberante"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg",alt:"Imagem das Montanhas Carecas, vegetação com árvores e ao fundo o pör do sol"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg",alt:"Imagem do vale de Latemar, montanhas ao fundo e céu estrelado"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg",alt:"Imagem do Parque Nacional Vanoise com Lago, montanhas ao fundo e natureza belissima"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg",alt:"Imagem do Lago di Braies com um deck, barcos ancorados, montanhas ao fundo e natureza preservada"}],W=[],x=u(W,B).slice().reverse(),M=n(136),V=n(17),U={openPopupCardImg:"img-popup-card__opened",popupCardImgOpen:c("#img-popup-card"),popupCardImg:c(".img-popup-card__image"),popupCardName:c(".img-popup-card__title")},N=U.popupCardImg,q=U.popupCardName;function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function $(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,Y(o.key),o)}}function G(t,e,n){return(e=Y(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Y(t){var e=function(t,e){if("object"!==z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==z(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===z(e)?e:String(e)}var H=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),G(this,"_createCallbackAddDisplay",(function(){return function(){return function(t,e){return e.classList.add(t)}(n._openedClassName,n._popupElement)}})),G(this,"_createCallbackRemoveDisplay",(function(){return function(){!function(t,e){e.classList.remove(t)}(n._openedClassName,n._popupElement)}})),G(this,"_handleEscClose",(function(){var t;_("keydown",(t=n._createCallbackRemoveDisplay(),function(e){return"Escape"===e.key?s(t):null}),document)})),G(this,"_handleOutsideClickClose",(function(){var t,e;_("mousedown",(t=n._popupElementWithoutDot,e=n._createCallbackRemoveDisplay(),function(n){return v(t,n.target)?s(e):null}),n._popupElement)})),G(this,"open",(function(){return function(){!function(t,e,n){var o=p(t,e);l(o?"null":"block",e,n)}(n._openedClassName,n._popupElement,n._createCallbackAddDisplay())}})),G(this,"close",(function(){return function(){!function(t,e,n){var o=p(t,e);l(o?"hidden":"null",e,n)}(n._openedClassName,n._popupElement,n._createCallbackRemoveDisplay())}})),G(this,"setEventListeners",(function(){n._handleEscClose(),n._handleOutsideClickClose(),n._getCloseButtonsAndAddEventListener()})),this._popupElement=c(e),this._popupElementWithoutDot=y(e)(),this._openedClassName="".concat(this._popupElementWithoutDot,"__opened"),this._closeButtons=Array.from(c('[id$="__closed-btn"]',"querySelectorAll"))}var e,n;return e=t,(n=[{key:"_getCloseButtonsAndAddEventListener",value:function(){var t=this;this._closeButtons.forEach((function(e){_("mousedown",(function(){t.close()()}),e)}))}}])&&$(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function J(t){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},J(t)}function K(t,e){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},K(t,e)}function Q(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function X(t){return X=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},X(t)}function Z(t){var e=function(t,e){if("object"!==J(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==J(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===J(e)?e:String(e)}var tt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&K(t,e)}(i,t);var e,n,o,r=(n=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=X(n);if(o){var r=X(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===J(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return Q(t)}(this,t)});function i(){var t,e,n,o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),e=Q(t=r.call(this,".img-popup-card")),o=function(){t._setEventListeners},(n=Z(n="setEventListenersPopupWithImageToDOM"))in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,t._setEventListeners=t.setEventListeners(),t._setEventListenerCard=ot.prototype.setEventListenerFromPopupWithImage,t.open=t.open(),t}return e=i,Object.defineProperty(e,"prototype",{writable:!1}),e}(H);function et(t){return et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},et(t)}function nt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==et(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==et(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===et(r)?r:String(r)),o)}var r}var ot=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this._templateSelector=n,this._cardElement=this._getTemplate(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._popupWithImage=new tt,this.setEventListenerFromPopupWithImage()}var e,n,o;return e=t,o=[{key:"renderCards",value:function(e){var n=this;return this._templateSelector="#cards-template",e.map((function(e){return n._newCardInstance=new t(e,n._templateSelector),n._newCardInstance.generateInstanceCard()}))}},{key:"addNewCardToDOM",value:function(){this._cardsSection=c(".cards"),this._newCardToDOM=this.renderCards(x)[0],this._cardsSection.insertBefore(this._newCardToDOM,this._cardsSection.firstChild),f(this._newCardToDOM,0,1,400)}}],(n=[{key:"_getTemplate",value:function(){return c(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"setEventListenerFromPopupWithImage",value:function(){var t=this;this._cardImage.addEventListener("mousedown",(function(){t._popupWithImage.open(),N.src=t._data.link,q.textContent=t._data.name}))}},{key:"generateInstanceCard",value:function(){return m(this._cardImage,{src:this._data.link,alt:"Imagem de ".concat(this._data.name)}),this._cardTitle.textContent=this._data.name,this._cardElement}}])&&nt(e.prototype,n),o&&nt(e,o),Object.defineProperty(e,"prototype",{writable:!1}),t}(),rt=function(t){return function(t,e,n,o,r,i){if(v(e,t.target)){var a=b(e,t.target),u="true"===a.getAttribute("data-active");a.setAttribute("data-active",!u),m(a,u?{src:o,alt:"Icon de coração desativado apenas com bordas"}:{src:n,alt:"Icon de coração ativado com preenchimento"}),f(a,0,1,400)}}(t,"button-heart-icon",M,V)},it=function(t){return function(t,e,n){if(v("button-trash-icon",t.target)){var o=b("card",t.target);f(o,1,0,400,!0)}}(t)};function at(t){return at="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},at(t)}function ut(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==at(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==at(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===at(r)?r:String(r)),o)}var r}function ct(t,e){!function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t,e),e.add(t)}function st(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}g();var lt=new WeakSet,pt=new WeakSet,ft=new WeakSet,mt=new WeakSet,dt=new WeakSet,yt=new WeakSet,bt=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),ct(this,yt),ct(this,dt),ct(this,mt),ct(this,ft),ct(this,pt),ct(this,lt),this._validationConfig=e,this._formElement=n,this._PT_BR_ERROR_MESSAGES={valueMissing:"Este campo é obrigatório.",typeMismatch:{email:"Por favor, informe um endereço de e-mail válido.",url:"Por favor, informe uma URL válida."},tooShort:"Por favor, informe pelo menos {minLength} caracteres.",tooLong:"Por favor, informe no máximo {maxLength} caracteres.",patternMismatch:"Por favor, preencha este campo corretamente."}}var e,n;return e=t,(n=[{key:"enableValidation",value:function(){var t=this,e=Array.from(this._formElement.querySelectorAll(".popup__input")),n=this._formElement.querySelector(".popup__button");this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),st(this,dt,wt).call(this,e,n),e.forEach((function(e){st(t,yt,St).call(t,e)}))}}])&&ut(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function vt(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._validationConfig.inputErrorClass),n.classList.add(this._validationConfig.errorClass);var o=t.validationMessage,r=this._PT_BR_ERROR_MESSAGES[o]||e;n.textContent=r}function _t(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));e&&(t.classList.remove(this._validationConfig.inputErrorClass),e.classList.remove(this._validationConfig.errorClass),e.textContent="")}function ht(t){t.validity.valid?st(this,pt,_t).call(this,t):st(this,lt,vt).call(this,t,t.validationMessage)}function gt(t){return t.some((function(t){return!t.validity.valid}))}function wt(t,e){st(this,mt,gt).call(this,t)?e.classList.add(this._validationConfig.inactiveButtonClass):e.classList.remove(this._validationConfig.inactiveButtonClass)}function St(){var t=this,e=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector)),n=this._formElement.querySelector(this._validationConfig.submitButtonSelector);st(this,dt,wt).call(this,e,n),e.forEach((function(o){o.addEventListener("input",(function(){st(t,ft,ht).call(t,o),st(t,dt,wt).call(t,e,n)}))}))}function Pt(t){return Pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Pt(t)}function Ot(t,e){return Ot=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},Ot(t,e)}function jt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Et(t){return Et=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Et(t)}function Ct(t,e,n){return(e=It(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function It(t){var e=function(t,e){if("object"!==Pt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==Pt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===Pt(e)?e:String(e)}var Lt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Ot(t,e)}(i,t);var e,n,o,r=(n=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Et(n);if(o){var r=Et(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Pt(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return jt(t)}(this,t)});function i(t){var e,n=t.nameSelector,o=t.jobSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),Ct(jt(e=r.call(this,".popup")),"_getUserInfo",(function(t){t.preventDefault(),e._name.placeholder="Insira o Nome do Usuário",e._job.placeholder="Insira a sua Profissão",e._open(),O.reset(),e._formValidatorUserInfo.enableValidation()})),Ct(jt(e),"_setUserInfo",(function(t){t.preventDefault();var n,o=e._name.value,r=e._job.value;o&&r&&((n=function(t,e){return t&&e&&!T.some((function(e){return e.name===t}))?{name:t,job:e}:null}(o,r))&&(k=[n].concat(w(k)),T=u(k,L)),e._close(),C.textContent=o,I.textContent=r,O.reset(),e._formValidatorUserInfo.enableValidation())})),Ct(jt(e),"_getButtonsForFunctionsUserInfo",(function(){return{"button-edit":e._getUserInfo,popup__button:e._setUserInfo}})),Ct(jt(e),"_handleButtonsForFunctionsUserInfo",(function(t){return h(e._getButtonsForFunctionsUserInfo(),t)})),Ct(jt(e),"setEventListenersUserInfoToDOM",(function(){e._open(),e._close(),e._setEventListeners,_("click",e._handleButtonsForFunctionsUserInfo,document)})),e._name=n,e._job=o,e._open=e.open(),e._close=e.close(),e._setEventListeners=e.setEventListeners();var a=g(O,".popup__input",".popup__button");return e._formValidatorUserInfo=new bt(a,O),e._formValidatorUserInfo.enableValidation(),e}return e=i,Object.defineProperty(e,"prototype",{writable:!1}),e}(H);function kt(t){return kt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},kt(t)}function Tt(t,e){return Tt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},Tt(t,e)}function At(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Dt(t){return Dt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Dt(t)}function Ft(t,e,n){return(e=Rt(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Rt(t){var e=function(t,e){if("object"!==kt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==kt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===kt(e)?e:String(e)}var Bt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Tt(t,e)}(i,t);var e,n,o,r=(n=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Dt(n);if(o){var r=Dt(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===kt(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return At(t)}(this,t)});function i(t){var e,n=t.nameSelector,o=t.linkSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),Ft(At(e=r.call(this,".popup_card-add")),"_getInputValues",(function(t){t.preventDefault(),F.placeholder="Insira o Nome do Local",R.placeholder="Insira o URL da Imagem",e._open(),D.reset(),e._formValidatorPopupWithForm.enableValidation()})),Ft(At(e),"_setInputValues",(function(t){t.preventDefault();var n=F.value,o=R.value;n&&o&&(function(t,e){var n=function(t,e){return t&&e?{name:t,link:e,alt:"Imagem de ".concat(t)}:null}(t,e);n&&(W=[n].concat(w(W)),x=u(W,B))}(n,o),ot.addNewCardToDOM(),e._close(),D.reset(),e._formValidatorPopupWithForm.enableValidation())})),Ft(At(e),"_getButtonsForFunctionsPopupWithForm",(function(){return{"button-add":e._getInputValues,"popup__button_card-add":e._setInputValues}})),Ft(At(e),"_handleButtonsForFunctionsPopupWithForm",(function(t){return h(e._getButtonsForFunctionsPopupWithForm(),t)})),Ft(At(e),"setEventListenersPopupWithFormToDOM",(function(){e._open(),e._close(),e._setEventListeners,_("click",e._handleButtonsForFunctionsPopupWithForm,document)})),e._name=n,e._link=o,e._open=e.open(),e._close=e.close(),e._setEventListeners=e.setEventListeners();var a=g(D,".popup__input",".popup__button");return e._formValidatorPopupWithForm=new bt(a,D),e._formValidatorPopupWithForm.enableValidation(),e}return e=i,Object.defineProperty(e,"prototype",{writable:!1}),e}(H);function Wt(t){return Wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Wt(t)}function xt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==Wt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==Wt(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===Wt(r)?r:String(r)),o)}var r}var Mt=function(){function t(e,n){var o=e.items,r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=o,this._renderer=r,this._container=c(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&xt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),Vt=new Lt({nameSelector:j,jobSelector:E}),Ut=new Bt({nameSelector:F,jobSelector:R}),Nt=new tt,qt=new Mt({items:x,renderer:function(t){var e=new ot(t,"#cards-template").generateInstanceCard();qt.addItem(e)}},".cards");document.addEventListener("DOMContentLoaded",(function(){Vt.setEventListenersUserInfoToDOM(),Ut.setEventListenersPopupWithFormToDOM(),Nt.setEventListenersPopupWithImageToDOM(),qt.renderItems(),function(){var t=c(".cards");_("mousedown",rt,t),_("mousedown",it,t)}()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dkIsQ0FDRUUsTUFBT2pLLEVBQ1BrSyxTQUFVLFNBQUNyRyxHQUNULElBQ00rRyxFQURrQixJQUFJOUgsR0FBS2UsRUFBTSxtQkFDSEUsdUJBQ3BDNEcsR0FBYUUsUUFBUUQsRUFDdkIsR0FFRixVQWVGM1AsU0FBU3NDLGlCQUFpQixvQkFSRixXQUN0QmlOLEdBQVNNLGlDQUNUTCxHQUFjTSxzQ0FDZEwsR0FBZU0sdUNBTmZMLEdBQWFNLGNMNENhLFdBQzFCLElBQU1OLEVBQWU1UCxFQUFXLFVBQ2hDcUMsRUFBYyxZQUFhb0gsR0FBcUJtRyxHQUNoRHZOLEVBQWMsWUFBYTZILEdBQWtCMEYsRUFDL0MsQ0t4Q0VPLEVBQ0YsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL3V0aWxzL2hlbHBlcnMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCJleHBvcnQgY29uc3QgZ2V0QWxsQXJycyA9IChuZXdBcnIsIGluaXRpYWxBcnIpID0+IHtcclxuICByZXR1cm4gW1xyXG4gICAgLi4ubmV3QXJyLm1hcCgoaXRlbSkgPT4gKHsgLi4uaXRlbSB9KSksXHJcbiAgICAuLi5pbml0aWFsQXJyLm1hcCgoaXRlbSkgPT4gKHsgLi4uaXRlbSB9KSksXHJcbiAgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRFbGVtZW50ID0gKHNlbGVjdG9yLCBtZXRob2QgPSBcInF1ZXJ5U2VsZWN0b3JcIikgPT5cclxuICBkb2N1bWVudFttZXRob2RdKHNlbGVjdG9yKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjYWxsSWZGdW5jdGlvbiA9IChjYWxsYmFjaykgPT5cclxuICB0eXBlb2YgY2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIiAmJiBjYWxsYmFjaygpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN0eWxlRGlzcGxheVZhbHVlID0gKGRpc3BsYXlWYWx1ZSwgdGFyZ2V0RWxlbWVudCwgY2FsbGJhY2spID0+IHtcclxuICBjYWxsSWZGdW5jdGlvbihjYWxsYmFjayk7XHJcbiAgY29uc3Qgc3R5bGUgPSB0YXJnZXRFbGVtZW50LnN0eWxlO1xyXG4gIHJldHVybiAoc3R5bGUuZGlzcGxheSA9IGRpc3BsYXlWYWx1ZSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY29udGFpbnMgPSAodGFyZ2V0Q2xhc3NOYW1lLCB0YXJnZXRFbGVtZW50KSA9PlxyXG4gIHRhcmdldEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKHRhcmdldENsYXNzTmFtZSk7XHJcblxyXG5leHBvcnQgY29uc3QgdG9nZ2xlUG9wdXBEaXNwbGF5ID0gKFxyXG4gIHRhcmdldENsYXNzTmFtZSxcclxuICB0YXJnZXRFbGVtZW50LFxyXG4gIGNhbGxiYWNrXHJcbikgPT4ge1xyXG4gIGNvbnN0IGlzT3BlbiA9IGNvbnRhaW5zKHRhcmdldENsYXNzTmFtZSwgdGFyZ2V0RWxlbWVudCk7XHJcbiAgc3R5bGVEaXNwbGF5VmFsdWUoaXNPcGVuID8gXCJoaWRkZW5cIiA6IFwiYmxvY2tcIiwgdGFyZ2V0RWxlbWVudCwgY2FsbGJhY2spO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlbW92ZVBvcHVwRGlzcGxheSA9IChcclxuICB0YXJnZXRDbGFzc05hbWUsXHJcbiAgdGFyZ2V0RWxlbWVudCxcclxuICBjYWxsYmFja1xyXG4pID0+IHtcclxuICBjb25zdCBpc09wZW4gPSBjb250YWlucyh0YXJnZXRDbGFzc05hbWUsIHRhcmdldEVsZW1lbnQpO1xyXG4gIHN0eWxlRGlzcGxheVZhbHVlKGlzT3BlbiA/IFwiaGlkZGVuXCIgOiBcIm51bGxcIiwgdGFyZ2V0RWxlbWVudCwgY2FsbGJhY2spO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZFBvcHVwRGlzcGxheSA9ICh0YXJnZXRDbGFzc05hbWUsIHRhcmdldEVsZW1lbnQsIGNhbGxiYWNrKSA9PiB7XHJcbiAgY29uc3QgaXNPcGVuID0gY29udGFpbnModGFyZ2V0Q2xhc3NOYW1lLCB0YXJnZXRFbGVtZW50KTtcclxuICBzdHlsZURpc3BsYXlWYWx1ZShpc09wZW4gPyBcIm51bGxcIiA6IFwiYmxvY2tcIiwgdGFyZ2V0RWxlbWVudCwgY2FsbGJhY2spO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHRvZ2dsZSA9ICh0YXJnZXRDbGFzc05hbWUsIHRhcmdldEVsZW1lbnQpID0+XHJcbiAgdGFyZ2V0RWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKHRhcmdldENsYXNzTmFtZSk7XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlID0gKHRhcmdldENsYXNzTmFtZSwgdGFyZ2V0RWxlbWVudCkgPT5cclxuICB0YXJnZXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGFyZ2V0Q2xhc3NOYW1lKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhZGQgPSAodGFyZ2V0Q2xhc3NOYW1lLCB0YXJnZXRFbGVtZW50KSA9PlxyXG4gIHRhcmdldEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0YXJnZXRDbGFzc05hbWUpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFuaW1hdGVPcGFjaXR5ID0gKFxyXG4gIHRhcmdldEVsZW1lbnQsXHJcbiAgc3RhcnRPcGFjaXR5LFxyXG4gIGVuZE9wYWNpdHksXHJcbiAgZHVyYXRpb24sXHJcbiAgcmVtb3ZlT25GaW5pc2ggPSBmYWxzZVxyXG4pID0+IHtcclxuICB0YXJnZXRFbGVtZW50LmFuaW1hdGUoW3sgb3BhY2l0eTogc3RhcnRPcGFjaXR5IH0sIHsgb3BhY2l0eTogZW5kT3BhY2l0eSB9XSwge1xyXG4gICAgZHVyYXRpb246IGR1cmF0aW9uLFxyXG4gICAgZWFzaW5nOiBcImVhc2UtaW4tb3V0XCIsXHJcbiAgfSkub25maW5pc2ggPSAoKSA9PiB7XHJcbiAgICBpZiAocmVtb3ZlT25GaW5pc2gpIHtcclxuICAgICAgdGFyZ2V0RWxlbWVudC5yZW1vdmUoKTtcclxuICAgIH1cclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldEF0dHJpYnV0ZXMgPSAodGFyZ2V0RWxlbWVudCwgYXR0cmlidXRlcykgPT4ge1xyXG4gIGZvciAobGV0IGF0dHJpYnV0ZSBpbiBhdHRyaWJ1dGVzKSB7XHJcbiAgICB0YXJnZXRFbGVtZW50LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIGF0dHJpYnV0ZXNbYXR0cmlidXRlXSk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFN0YXJ0c1dpdGhEb3QgPSAoc3RyaW5nKSA9PiBzdHJpbmcuc3RhcnRzV2l0aChcIi5cIik7XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlU3RhcnRpbmdEb3QgPSAoc3RyaW5nKSA9PiAoKSA9PlxyXG4gIGdldFN0YXJ0c1dpdGhEb3Qoc3RyaW5nKSA/IHN0cmluZy5zbGljZSgxKSA6IHN0cmluZztcclxuXHJcbmV4cG9ydCBjb25zdCBhZGRTdGFydGluZ0RvdCA9IChzdHJpbmcpID0+ICgpID0+XHJcbiAgZ2V0U3RhcnRzV2l0aERvdChzdHJpbmcpID8gc3RyaW5nIDogXCIuXCIgKyBzdHJpbmc7XHJcblxyXG5leHBvcnQgY29uc3QgZXZ0VGFyZ2V0Q2xvc2VzdEVsZW1lbnQgPSAodGFyZ2V0Q2xhc3NOYW1lLCB0YXJnZXRFbGVtZW50KSA9PlxyXG4gIHRhcmdldEVsZW1lbnQuY2xvc2VzdChhZGRTdGFydGluZ0RvdCh0YXJnZXRDbGFzc05hbWUpKCkpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlzVGFyZ2V0RWxlbWVudENsaWNrZWQgPSAodGFyZ2V0Q2xhc3NOYW1lLCB0YXJnZXRFbGVtZW50KSA9PlxyXG4gIGNvbnRhaW5zKHRhcmdldENsYXNzTmFtZSwgdGFyZ2V0RWxlbWVudCkgJiZcclxuICBldnRUYXJnZXRDbG9zZXN0RWxlbWVudChyZW1vdmVTdGFydGluZ0RvdCh0YXJnZXRDbGFzc05hbWUpKCksIHRhcmdldEVsZW1lbnQpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhhbmRsZUtleVByZXNzRnVuY3Rpb24gPSAocmVtb3ZlUG9wdXBGdW5jKSA9PiAoZXZ0KSA9PlxyXG4gIGV2dC5rZXkgPT09IFwiRXNjYXBlXCIgPyBjYWxsSWZGdW5jdGlvbihyZW1vdmVQb3B1cEZ1bmMpIDogbnVsbDtcclxuXHJcbmV4cG9ydCBjb25zdCBoYW5kbGVPdXRzaWRlQ2xpY2tGdW5jdGlvbiA9XHJcbiAgKHRhcmdldENsYXNzTmFtZSwgcmVtb3ZlUG9wdXBGdW5jKSA9PiAoZXZ0KSA9PlxyXG4gICAgaXNUYXJnZXRFbGVtZW50Q2xpY2tlZCh0YXJnZXRDbGFzc05hbWUsIGV2dC50YXJnZXQpXHJcbiAgICAgID8gY2FsbElmRnVuY3Rpb24ocmVtb3ZlUG9wdXBGdW5jKVxyXG4gICAgICA6IG51bGw7XHJcblxyXG5leHBvcnQgY29uc3QgYWRkRXZlbnRUb0RPTSA9IChldnQsIGhhbmRsZXIsIHRhcmdldEVsZW1lbnQpID0+XHJcbiAgdGFyZ2V0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2dCwgaGFuZGxlcik7XHJcblxyXG5leHBvcnQgY29uc3QgYWRkRXZ0QnV0dG9uc0ZvckZ1bmN0aW9ucyA9IChidXR0b25GdW5jdGlvbnMsIGV2dCkgPT4ge1xyXG4gIGNvbnN0IGJ1dHRvbkZ1bmN0aW9uSWQgPSBidXR0b25GdW5jdGlvbnNbZXZ0LnRhcmdldC5pZF07XHJcbiAgYnV0dG9uRnVuY3Rpb25JZCA/IGJ1dHRvbkZ1bmN0aW9uSWQoZXZ0KSA6IG51bGw7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VmFsaWRhdGlvbiA9IChcclxuICBmb3JtU2VsZWN0b3IsXHJcbiAgaW5wdXRTZWxlY3RvcixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvclxyXG4pID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgZm9ybVNlbGVjdG9yLFxyXG4gICAgaW5wdXRTZWxlY3RvcixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGhhbmRsZUxpa2VGdW5jdGlvbiA9IChcclxuICBldnQsXHJcbiAgdGFyZ2V0U2VsZWN0b3IsXHJcbiAgaWNvbkVuYWJsZWRTcmMsXHJcbiAgaWNvbkRpc2FibGVkU3JjLFxyXG4gIGljb25FbmFibGVkQWx0LFxyXG4gIGljb25EaXNhYmxlZEFsdFxyXG4pID0+IHtcclxuICBpZiAoaXNUYXJnZXRFbGVtZW50Q2xpY2tlZCh0YXJnZXRTZWxlY3RvciwgZXZ0LnRhcmdldCkpIHtcclxuICAgIGNvbnN0IHRhcmdldEVsZW1lbnQgPSBldnRUYXJnZXRDbG9zZXN0RWxlbWVudCh0YXJnZXRTZWxlY3RvciwgZXZ0LnRhcmdldCk7XHJcbiAgICBjb25zdCBpc0FjdGl2ZSA9IHRhcmdldEVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1hY3RpdmVcIikgPT09IFwidHJ1ZVwiO1xyXG4gICAgdGFyZ2V0RWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFjdGl2ZVwiLCAhaXNBY3RpdmUpO1xyXG4gICAgc2V0QXR0cmlidXRlcyhcclxuICAgICAgdGFyZ2V0RWxlbWVudCxcclxuICAgICAgaXNBY3RpdmVcclxuICAgICAgICA/IHtcclxuICAgICAgICAgICAgc3JjOiBpY29uRGlzYWJsZWRTcmMsXHJcbiAgICAgICAgICAgIGFsdDogaWNvbkRpc2FibGVkQWx0LFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIDoge1xyXG4gICAgICAgICAgICBzcmM6IGljb25FbmFibGVkU3JjLFxyXG4gICAgICAgICAgICBhbHQ6IGljb25FbmFibGVkQWx0LFxyXG4gICAgICAgICAgfVxyXG4gICAgKTtcclxuICAgIGFuaW1hdGVPcGFjaXR5KHRhcmdldEVsZW1lbnQsIDAsIDEsIDQwMCk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGhhbmRsZURlbGV0ZUZ1bmN0aW9uID0gKFxyXG4gIGV2dCxcclxuICBkZWxldGVCdXR0b25TZWxlY3RvcixcclxuICB0YXJnZXRTZWxlY3RvclxyXG4pID0+IHtcclxuICBpZiAoaXNUYXJnZXRFbGVtZW50Q2xpY2tlZChkZWxldGVCdXR0b25TZWxlY3RvciwgZXZ0LnRhcmdldCkpIHtcclxuICAgIGNvbnN0IGNhcmREZWxldGUgPSBldnRUYXJnZXRDbG9zZXN0RWxlbWVudCh0YXJnZXRTZWxlY3RvciwgZXZ0LnRhcmdldCk7XHJcbiAgICBhbmltYXRlT3BhY2l0eShjYXJkRGVsZXRlLCAxLCAwLCA0MDAsIHRydWUpO1xyXG4gIH1cclxufTtcclxuIiwiaW1wb3J0IHsgZ2V0QWxsQXJycywgZ2V0RWxlbWVudCB9IGZyb20gXCIuL2hlbHBlcnMuanNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCB7XHJcbiAgb3BlblBvcHVwUHJvZmlsZSxcclxuICBwb3B1cFByb2ZpbGUsXHJcbiAgcG9wdXBQcm9maWxlRm9ybSxcclxuICBuYW1lSW5wdXRQcm9maWxlLFxyXG4gIGpvYklucHV0UHJvZmlsZSxcclxuICBuYW1lT3V0cHV0UHJvZmlsZSxcclxuICBqb2JPdXRwdXRQcm9maWxlLFxyXG4gIGJ0blN1Ym1pdFByb2ZpbGUsXHJcbiAgYnRuQ2xvc2VQcm9maWxlLFxyXG4gIGJ0bkVkaXRQcm9maWxlLFxyXG59ID0ge1xyXG4gIG9wZW5Qb3B1cFByb2ZpbGU6IFwicG9wdXBfX29wZW5lZFwiLFxyXG4gIHBvcHVwUHJvZmlsZTogZ2V0RWxlbWVudChcIiNwb3B1cFwiKSxcclxuICBwb3B1cFByb2ZpbGVGb3JtOiBnZXRFbGVtZW50KFwiLnBvcHVwX19mb3JtXCIpLFxyXG4gIG5hbWVJbnB1dFByb2ZpbGU6IGdldEVsZW1lbnQoXCIucG9wdXBfX2lucHV0X3R5cGVfbmFtZVwiKSxcclxuICBqb2JJbnB1dFByb2ZpbGU6IGdldEVsZW1lbnQoXCIucG9wdXBfX2lucHV0X3R5cGVfam9iXCIpLFxyXG4gIG5hbWVPdXRwdXRQcm9maWxlOiBnZXRFbGVtZW50KFwiLmhlYWRlcl9fdGl0bGVcIiksXHJcbiAgam9iT3V0cHV0UHJvZmlsZTogZ2V0RWxlbWVudChcIi5oZWFkZXJfX3N1YnRpdGxlXCIpLFxyXG4gIGJ0blN1Ym1pdFByb2ZpbGU6IGdldEVsZW1lbnQoXCIucG9wdXBfX2J1dHRvblwiKSxcclxuICBidG5DbG9zZVByb2ZpbGU6IGdldEVsZW1lbnQoXCIucG9wdXBfX2Nsb3NlZC1idG5cIiksXHJcbiAgYnRuRWRpdFByb2ZpbGU6IGdldEVsZW1lbnQoXCIuYnV0dG9uLWVkaXRcIiksXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbFByb2ZpbGUgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogbmFtZU91dHB1dFByb2ZpbGUudGV4dENvbnRlbnQsXHJcbiAgICBqb2I6IGpvYk91dHB1dFByb2ZpbGUudGV4dENvbnRlbnQsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBsZXQgbmV3UHJvZmlsZXMgPSBbXTtcclxuXHJcbmV4cG9ydCBsZXQgYWxsUHJvZmlsZXMgPSBnZXRBbGxBcnJzKG5ld1Byb2ZpbGVzLCBpbml0aWFsUHJvZmlsZSk7XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlTmV3UHJvZmlsZSA9IChuYW1lLCBqb2IpID0+XHJcbiAgbmFtZSAmJiBqb2IgJiYgIWFsbFByb2ZpbGVzLnNvbWUoKHByb2ZpbGUpID0+IHByb2ZpbGUubmFtZSA9PT0gbmFtZSlcclxuICAgID8geyBuYW1lLCBqb2IgfVxyXG4gICAgOiBudWxsO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZE5ld1Byb2ZpbGUgPSAobmFtZSwgam9iKSA9PiB7XHJcbiAgY29uc3QgbmV3UHJvZmlsZSA9IGNyZWF0ZU5ld1Byb2ZpbGUobmFtZSwgam9iKTtcclxuICBpZiAobmV3UHJvZmlsZSkge1xyXG4gICAgbmV3UHJvZmlsZXMgPSBbbmV3UHJvZmlsZSwgLi4ubmV3UHJvZmlsZXNdO1xyXG4gICAgYWxsUHJvZmlsZXMgPSBnZXRBbGxBcnJzKG5ld1Byb2ZpbGVzLCBpbml0aWFsUHJvZmlsZSk7XHJcbiAgfVxyXG4gIHJldHVybiB7IGFsbFByb2ZpbGVzLCBuZXdQcm9maWxlcyB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHtcclxuICBvcGVuUG9wdXBDYXJkQWRkLFxyXG4gIHBvcHVwQ2FyZEFkZCxcclxuICBwb3B1cENhcmRBZGRGb3JtLFxyXG4gIHBvcHVwQ2FyZEFkZEJ1dHRvblN1Ym1pdCxcclxuICBwbGFjZUlucHV0Q2FyZEFkZCxcclxuICBpbWdMaW5rSW5wdXRDYXJkQWRkLFxyXG59ID0ge1xyXG4gIG9wZW5Qb3B1cENhcmRBZGQ6IFwicG9wdXBfY2FyZC1hZGRfX29wZW5lZFwiLFxyXG4gIHBvcHVwQ2FyZEFkZDogZ2V0RWxlbWVudChcIiNwb3B1cF9jYXJkLWFkZFwiKSxcclxuICBwb3B1cENhcmRBZGRGb3JtOiBnZXRFbGVtZW50KFwiI3BvcHVwX19mb3JtX2NhcmQtYWRkXCIpLFxyXG4gIHBvcHVwQ2FyZEFkZEJ1dHRvblN1Ym1pdDogZ2V0RWxlbWVudChcIiNwb3B1cF9fYnV0dG9uX2NhcmQtYWRkXCIpLFxyXG4gIHBsYWNlSW5wdXRDYXJkQWRkOiBnZXRFbGVtZW50KFwiLnBvcHVwX19pbnB1dF90eXBlX3BsYWNlXCIpLFxyXG4gIGltZ0xpbmtJbnB1dENhcmRBZGQ6IGdldEVsZW1lbnQoXCIucG9wdXBfX2lucHV0X3R5cGVfaW1nLWxpbmtcIiksXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfeW9zZW1pdGUuanBnXCIsXHJcbiAgICBhbHQ6IFwiSW1hZ2VtIGRvIHZhbGUgZGUgWW9zZW1pdGUgY29tIHVtIHJpbywgw6Fydm9yZXMsIG1vbnRhbmhhcyBhbyBmdW5kbyBlIG11aXRhIG5hdHVyZXphXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICBhbHQ6IFwiSW1hZ2VtIGRvIExhZ28gTG91aXNlIGNvbSBtb250YW5oYXMgYW8gZnVuZG8gZSBuYXR1cmV6YSBleHViZXJhbnRlXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICBhbHQ6IFwiSW1hZ2VtIGRhcyBNb250YW5oYXMgQ2FyZWNhcywgdmVnZXRhw6fDo28gY29tIMOhcnZvcmVzIGUgYW8gZnVuZG8gbyBww7ZyIGRvIHNvbFwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfbGF0ZW1hci5qcGdcIixcclxuICAgIGFsdDogXCJJbWFnZW0gZG8gdmFsZSBkZSBMYXRlbWFyLCBtb250YW5oYXMgYW8gZnVuZG8gZSBjw6l1IGVzdHJlbGFkb1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF92YW5vaXNlLmpwZ1wiLFxyXG4gICAgYWx0OiBcIkltYWdlbSBkbyBQYXJxdWUgTmFjaW9uYWwgVmFub2lzZSBjb20gTGFnbywgbW9udGFuaGFzIGFvIGZ1bmRvIGUgbmF0dXJlemEgYmVsaXNzaW1hXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfbGFnby5qcGdcIixcclxuICAgIGFsdDogXCJJbWFnZW0gZG8gTGFnbyBkaSBCcmFpZXMgY29tIHVtIGRlY2ssIGJhcmNvcyBhbmNvcmFkb3MsIG1vbnRhbmhhcyBhbyBmdW5kbyBlIG5hdHVyZXphIHByZXNlcnZhZGFcIixcclxuICB9LFxyXG5dO1xyXG5cclxuZXhwb3J0IGxldCBuZXdDYXJkcyA9IFtdO1xyXG5cclxubGV0IGdldEFsbENhcmRzID0gZ2V0QWxsQXJycyhuZXdDYXJkcywgaW5pdGlhbENhcmRzKTtcclxuXHJcbmxldCByZXZlcnNlZENhcmRzID0gZ2V0QWxsQ2FyZHMuc2xpY2UoKS5yZXZlcnNlKCk7XHJcblxyXG5leHBvcnQgbGV0IGFsbENhcmRzID0gcmV2ZXJzZWRDYXJkcztcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVOZXdDYXJkID0gKG5hbWUsIGxpbmspID0+XHJcbiAgbmFtZSAmJiBsaW5rID8geyBuYW1lLCBsaW5rLCBhbHQ6IGBJbWFnZW0gZGUgJHtuYW1lfWAgfSA6IG51bGw7XHJcblxyXG5leHBvcnQgY29uc3QgYWRkTmV3Q2FyZCA9IChuYW1lLCBsaW5rKSA9PiB7XHJcbiAgY29uc3QgbmV3Q2FyZCA9IGNyZWF0ZU5ld0NhcmQobmFtZSwgbGluayk7XHJcbiAgaWYgKG5ld0NhcmQpIHtcclxuICAgIG5ld0NhcmRzID0gW25ld0NhcmQsIC4uLm5ld0NhcmRzXTtcclxuICAgIGFsbENhcmRzID0gZ2V0QWxsQXJycyhuZXdDYXJkcywgaW5pdGlhbENhcmRzKTtcclxuICB9XHJcbiAgcmV0dXJuIHsgYWxsQ2FyZHMsIG5ld0NhcmRzIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaGVhcnRJY29uRW5hYmxlZCA9IHJlcXVpcmUoXCIuLi9pbWFnZXMvaGVhcnRfaWNvbl9lbmFibGVkLnBuZ1wiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBoZWFydEljb25EaXNhYmxlZCA9IHJlcXVpcmUoXCIuLi9pbWFnZXMvaGVhcnRfaWNvbl9kaXNhYmxlZC5wbmdcIik7XHJcblxyXG5leHBvcnQgY29uc3Qge1xyXG4gIG9wZW5Qb3B1cENhcmRJbWcsXHJcbiAgcG9wdXBDYXJkSW1nT3BlbixcclxuICBwb3B1cENhcmRJbWcsXHJcbiAgcG9wdXBDYXJkTmFtZSxcclxufSA9IHtcclxuICBvcGVuUG9wdXBDYXJkSW1nOiBcImltZy1wb3B1cC1jYXJkX19vcGVuZWRcIixcclxuICBwb3B1cENhcmRJbWdPcGVuOiBnZXRFbGVtZW50KFwiI2ltZy1wb3B1cC1jYXJkXCIpLFxyXG4gIHBvcHVwQ2FyZEltZzogZ2V0RWxlbWVudChcIi5pbWctcG9wdXAtY2FyZF9faW1hZ2VcIiksXHJcbiAgcG9wdXBDYXJkTmFtZTogZ2V0RWxlbWVudChcIi5pbWctcG9wdXAtY2FyZF9fdGl0bGVcIiksXHJcbn07XHJcbiIsImltcG9ydCB7XHJcbiAgZ2V0RWxlbWVudCxcclxuICByZW1vdmVTdGFydGluZ0RvdCxcclxuICBhZGQsXHJcbiAgYWRkUG9wdXBEaXNwbGF5LFxyXG4gIHJlbW92ZSxcclxuICByZW1vdmVQb3B1cERpc3BsYXksXHJcbiAgaGFuZGxlS2V5UHJlc3NGdW5jdGlvbixcclxuICBoYW5kbGVPdXRzaWRlQ2xpY2tGdW5jdGlvbixcclxuICBhZGRFdmVudFRvRE9NLFxyXG59IGZyb20gXCIuLi91dGlscy9oZWxwZXJzLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IodGFyZ2V0RWxlbWVudCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZ2V0RWxlbWVudCh0YXJnZXRFbGVtZW50KTtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudFdpdGhvdXREb3QgPSByZW1vdmVTdGFydGluZ0RvdCh0YXJnZXRFbGVtZW50KSgpO1xyXG4gICAgdGhpcy5fb3BlbmVkQ2xhc3NOYW1lID0gYCR7dGhpcy5fcG9wdXBFbGVtZW50V2l0aG91dERvdH1fX29wZW5lZGA7XHJcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbnMgPSBBcnJheS5mcm9tKFxyXG4gICAgICBnZXRFbGVtZW50KCdbaWQkPVwiX19jbG9zZWQtYnRuXCJdJywgXCJxdWVyeVNlbGVjdG9yQWxsXCIpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgX2NyZWF0ZUNhbGxiYWNrQWRkRGlzcGxheSA9ICgpID0+ICgpID0+XHJcbiAgICBhZGQodGhpcy5fb3BlbmVkQ2xhc3NOYW1lLCB0aGlzLl9wb3B1cEVsZW1lbnQpO1xyXG5cclxuICBfY3JlYXRlQ2FsbGJhY2tSZW1vdmVEaXNwbGF5ID0gKCkgPT4gKCkgPT4ge1xyXG4gICAgcmVtb3ZlKHRoaXMuX29wZW5lZENsYXNzTmFtZSwgdGhpcy5fcG9wdXBFbGVtZW50KTtcclxuICB9O1xyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoKSA9PiB7XHJcbiAgICBhZGRFdmVudFRvRE9NKFxyXG4gICAgICBcImtleWRvd25cIixcclxuICAgICAgaGFuZGxlS2V5UHJlc3NGdW5jdGlvbih0aGlzLl9jcmVhdGVDYWxsYmFja1JlbW92ZURpc3BsYXkoKSksXHJcbiAgICAgIGRvY3VtZW50XHJcbiAgICApO1xyXG4gIH07XHJcblxyXG4gIF9oYW5kbGVPdXRzaWRlQ2xpY2tDbG9zZSA9ICgpID0+IHtcclxuICAgIGFkZEV2ZW50VG9ET00oXHJcbiAgICAgIFwibW91c2Vkb3duXCIsXHJcbiAgICAgIGhhbmRsZU91dHNpZGVDbGlja0Z1bmN0aW9uKFxyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudFdpdGhvdXREb3QsXHJcbiAgICAgICAgdGhpcy5fY3JlYXRlQ2FsbGJhY2tSZW1vdmVEaXNwbGF5KClcclxuICAgICAgKSxcclxuICAgICAgdGhpcy5fcG9wdXBFbGVtZW50XHJcbiAgICApO1xyXG4gIH07XHJcblxyXG4gIF9nZXRDbG9zZUJ1dHRvbnNBbmRBZGRFdmVudExpc3RlbmVyKCkge1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xyXG4gICAgICBhZGRFdmVudFRvRE9NKFxyXG4gICAgICAgIFwibW91c2Vkb3duXCIsXHJcbiAgICAgICAgKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5jbG9zZSgpKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBidXR0b25cclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb3BlbiA9ICgpID0+ICgpID0+IHtcclxuICAgIGFkZFBvcHVwRGlzcGxheShcclxuICAgICAgdGhpcy5fb3BlbmVkQ2xhc3NOYW1lLFxyXG4gICAgICB0aGlzLl9wb3B1cEVsZW1lbnQsXHJcbiAgICAgIHRoaXMuX2NyZWF0ZUNhbGxiYWNrQWRkRGlzcGxheSgpXHJcbiAgICApO1xyXG4gIH07XHJcblxyXG4gIGNsb3NlID0gKCkgPT4gKCkgPT4ge1xyXG4gICAgcmVtb3ZlUG9wdXBEaXNwbGF5KFxyXG4gICAgICB0aGlzLl9vcGVuZWRDbGFzc05hbWUsXHJcbiAgICAgIHRoaXMuX3BvcHVwRWxlbWVudCxcclxuICAgICAgdGhpcy5fY3JlYXRlQ2FsbGJhY2tSZW1vdmVEaXNwbGF5KClcclxuICAgICk7XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSgpO1xyXG4gICAgdGhpcy5faGFuZGxlT3V0c2lkZUNsaWNrQ2xvc2UoKTtcclxuICAgIHRoaXMuX2dldENsb3NlQnV0dG9uc0FuZEFkZEV2ZW50TGlzdGVuZXIoKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xyXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4vQ2FyZC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcihcIi5pbWctcG9wdXAtY2FyZFwiKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzID0gdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lckNhcmQgPVxyXG4gICAgICBDYXJkLnByb3RvdHlwZS5zZXRFdmVudExpc3RlbmVyRnJvbVBvcHVwV2l0aEltYWdlO1xyXG4gICAgdGhpcy5vcGVuID0gdGhpcy5vcGVuKCk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVyc1BvcHVwV2l0aEltYWdlVG9ET00gPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycztcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIHBvcHVwQ2FyZEltZyxcclxuICBwb3B1cENhcmROYW1lLFxyXG4gIGhlYXJ0SWNvbkVuYWJsZWQsXHJcbiAgaGVhcnRJY29uRGlzYWJsZWQsXHJcbiAgYWxsQ2FyZHMsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGdldEVsZW1lbnQsXHJcbiAgYWRkRXZlbnRUb0RPTSxcclxuICBhbmltYXRlT3BhY2l0eSxcclxuICBzZXRBdHRyaWJ1dGVzLFxyXG4gIGhhbmRsZUxpa2VGdW5jdGlvbixcclxuICBoYW5kbGVEZWxldGVGdW5jdGlvbixcclxufSBmcm9tIFwiLi4vdXRpbHMvaGVscGVycy5qc1wiO1xyXG5cclxuY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgdGVtcGxhdGVTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xyXG4gICAgdGhpcy5fcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoKTtcclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lckZyb21Qb3B1cFdpdGhJbWFnZSgpO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgdGVtcGxhdGUgPSBnZXRFbGVtZW50KHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpO1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSB0ZW1wbGF0ZS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVyRnJvbVBvcHVwV2l0aEltYWdlKCkge1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9wb3B1cFdpdGhJbWFnZS5vcGVuKCk7XHJcbiAgICAgIHBvcHVwQ2FyZEltZy5zcmMgPSB0aGlzLl9kYXRhLmxpbms7XHJcbiAgICAgIHBvcHVwQ2FyZE5hbWUudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLm5hbWU7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlSW5zdGFuY2VDYXJkKCkge1xyXG4gICAgc2V0QXR0cmlidXRlcyh0aGlzLl9jYXJkSW1hZ2UsIHtcclxuICAgICAgc3JjOiB0aGlzLl9kYXRhLmxpbmssXHJcbiAgICAgIGFsdDogYEltYWdlbSBkZSAke3RoaXMuX2RhdGEubmFtZX1gLFxyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLm5hbWU7XHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgcmVuZGVyQ2FyZHMoY2FyZHMpIHtcclxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSBcIiNjYXJkcy10ZW1wbGF0ZVwiO1xyXG4gICAgcmV0dXJuIGNhcmRzLm1hcCgoY2FyZCkgPT4ge1xyXG4gICAgICB0aGlzLl9uZXdDYXJkSW5zdGFuY2UgPSBuZXcgQ2FyZChjYXJkLCB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKTtcclxuICAgICAgcmV0dXJuIHRoaXMuX25ld0NhcmRJbnN0YW5jZS5nZW5lcmF0ZUluc3RhbmNlQ2FyZCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYWRkTmV3Q2FyZFRvRE9NKCkge1xyXG4gICAgdGhpcy5fY2FyZHNTZWN0aW9uID0gZ2V0RWxlbWVudChcIi5jYXJkc1wiKTtcclxuICAgIHRoaXMuX25ld0NhcmRUb0RPTSA9IHRoaXMucmVuZGVyQ2FyZHMoYWxsQ2FyZHMpWzBdO1xyXG4gICAgdGhpcy5fY2FyZHNTZWN0aW9uLmluc2VydEJlZm9yZShcclxuICAgICAgdGhpcy5fbmV3Q2FyZFRvRE9NLFxyXG4gICAgICB0aGlzLl9jYXJkc1NlY3Rpb24uZmlyc3RDaGlsZFxyXG4gICAgKTtcclxuICAgIGFuaW1hdGVPcGFjaXR5KHRoaXMuX25ld0NhcmRUb0RPTSwgMCwgMSwgNDAwKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IGhhbmRsZUhlYXJ0Q2FyZExpa2UgPSAoZXZ0KSA9PlxyXG4gIGhhbmRsZUxpa2VGdW5jdGlvbihcclxuICAgIGV2dCxcclxuICAgIFwiYnV0dG9uLWhlYXJ0LWljb25cIixcclxuICAgIGhlYXJ0SWNvbkVuYWJsZWQsXHJcbiAgICBoZWFydEljb25EaXNhYmxlZCxcclxuICAgIFwiSWNvbiBkZSBjb3Jhw6fDo28gYXRpdmFkbyBjb20gcHJlZW5jaGltZW50b1wiLFxyXG4gICAgXCJJY29uIGRlIGNvcmHDp8OjbyBkZXNhdGl2YWRvIGFwZW5hcyBjb20gYm9yZGFzXCJcclxuICApO1xyXG5cclxuY29uc3QgaGFuZGxlQ2FyZERlbGV0ZSA9IChldnQpID0+XHJcbiAgaGFuZGxlRGVsZXRlRnVuY3Rpb24oZXZ0LCBcImJ1dHRvbi10cmFzaC1pY29uXCIsIFwiY2FyZFwiKTtcclxuXHJcbmNvbnN0IGFkZEV2ZW50c0NhcmRzVG9ET00gPSAoKSA9PiB7XHJcbiAgY29uc3QgY2FyZHNTZWN0aW9uID0gZ2V0RWxlbWVudChcIi5jYXJkc1wiKTtcclxuICBhZGRFdmVudFRvRE9NKFwibW91c2Vkb3duXCIsIGhhbmRsZUhlYXJ0Q2FyZExpa2UsIGNhcmRzU2VjdGlvbik7XHJcbiAgYWRkRXZlbnRUb0RPTShcIm1vdXNlZG93blwiLCBoYW5kbGVDYXJkRGVsZXRlLCBjYXJkc1NlY3Rpb24pO1xyXG59O1xyXG5cclxuZXhwb3J0IHsgQ2FyZCwgYWRkRXZlbnRzQ2FyZHNUb0RPTSB9O1xyXG4iLCJpbXBvcnQgeyBnZXRWYWxpZGF0aW9uIH0gZnJvbSBcIi4uL3V0aWxzL2hlbHBlcnNcIjtcclxuXHJcbmdldFZhbGlkYXRpb24oKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5fdmFsaWRhdGlvbkNvbmZpZyA9IHZhbGlkYXRpb25Db25maWc7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gICAgdGhpcy5fUFRfQlJfRVJST1JfTUVTU0FHRVMgPSB7XHJcbiAgICAgIC8vIHNlIGFsdGVyYXIgbWFpcyBkbyBxdWUgaXNzbyBuYW8gdmFsaWRhIG9zIGNhbXBvcyxcclxuICAgICAgLy8gZXN0w6EgYWNvbXBhbmhhbmRvIG8gaWRpb21hIGRvIG5hdmVnYWRvcixcclxuICAgICAgLy8gbyBpZGlvbWEgcHJpbmNpcGFsIMOpIHB0QnIsIHNlIG7Do28sIGlkaW9tYSBkbyBuYXZlZ2Fkb3IsXHJcbiAgICAgIHZhbHVlTWlzc2luZzogXCJFc3RlIGNhbXBvIMOpIG9icmlnYXTDs3Jpby5cIixcclxuICAgICAgdHlwZU1pc21hdGNoOiB7XHJcbiAgICAgICAgZW1haWw6IFwiUG9yIGZhdm9yLCBpbmZvcm1lIHVtIGVuZGVyZcOnbyBkZSBlLW1haWwgdsOhbGlkby5cIixcclxuICAgICAgICB1cmw6IFwiUG9yIGZhdm9yLCBpbmZvcm1lIHVtYSBVUkwgdsOhbGlkYS5cIixcclxuICAgICAgfSxcclxuICAgICAgdG9vU2hvcnQ6IFwiUG9yIGZhdm9yLCBpbmZvcm1lIHBlbG8gbWVub3Mge21pbkxlbmd0aH0gY2FyYWN0ZXJlcy5cIixcclxuICAgICAgdG9vTG9uZzogXCJQb3IgZmF2b3IsIGluZm9ybWUgbm8gbcOheGltbyB7bWF4TGVuZ3RofSBjYXJhY3RlcmVzLlwiLFxyXG4gICAgICBwYXR0ZXJuTWlzbWF0Y2g6IFwiUG9yIGZhdm9yLCBwcmVlbmNoYSBlc3RlIGNhbXBvIGNvcnJldGFtZW50ZS5cIixcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAjX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl92YWxpZGF0aW9uQ29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl92YWxpZGF0aW9uQ29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gICAgY29uc3QgZXJyb3JUeXBlID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgY29uc3QgcHRCckVycm9yTWVzc2FnZSA9XHJcbiAgICAgIHRoaXMuX1BUX0JSX0VSUk9SX01FU1NBR0VTW2Vycm9yVHlwZV0gfHwgZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gcHRCckVycm9yTWVzc2FnZTtcclxuICB9XHJcblxyXG4gICNfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBlcnJvckVsZW1lbnQgJiZcclxuICAgICAgKGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3ZhbGlkYXRpb25Db25maWcuaW5wdXRFcnJvckNsYXNzKSxcclxuICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5lcnJvckNsYXNzKSxcclxuICAgICAgKGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCIpKTtcclxuICB9XHJcblxyXG4gICNfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZFxyXG4gICAgICA/IHRoaXMuI19zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSlcclxuICAgICAgOiB0aGlzLiNfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICB9XHJcblxyXG4gICNfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xyXG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xyXG4gIH1cclxuXHJcbiAgI190b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpIHtcclxuICAgIHRoaXMuI19oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KVxyXG4gICAgICA/IGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl92YWxpZGF0aW9uQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpXHJcbiAgICAgIDogYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFxyXG4gICAgICAgICAgdGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzXHJcbiAgICAgICAgKTtcclxuICB9XHJcblxyXG4gICNfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX3ZhbGlkYXRpb25Db25maWcuaW5wdXRTZWxlY3RvcilcclxuICAgICk7XHJcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgdGhpcy5fdmFsaWRhdGlvbkNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvclxyXG4gICAgKTtcclxuICAgIHRoaXMuI190b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xyXG4gICAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLiNfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy4jX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIilcclxuICAgICk7XHJcbiAgICBjb25zdCBidXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLiNfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KTtcclxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy4jX3NldEV2ZW50TGlzdGVuZXJzKGlucHV0RWxlbWVudCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XHJcbmltcG9ydCBCYXNlRm9ybVZhbGlkYXRvciBmcm9tIFwiLi9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCB7XHJcbiAgYWRkRXZ0QnV0dG9uc0ZvckZ1bmN0aW9ucyxcclxuICBhZGRFdmVudFRvRE9NLFxyXG4gIGdldFZhbGlkYXRpb24sXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2hlbHBlcnMuanNcIjtcclxuaW1wb3J0IHtcclxuICBwb3B1cFByb2ZpbGVGb3JtLFxyXG4gIG5hbWVPdXRwdXRQcm9maWxlLFxyXG4gIGpvYk91dHB1dFByb2ZpbGUsXHJcbiAgYWRkTmV3UHJvZmlsZSxcclxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IgfSkge1xyXG4gICAgc3VwZXIoXCIucG9wdXBcIik7XHJcbiAgICB0aGlzLl9uYW1lID0gbmFtZVNlbGVjdG9yO1xyXG4gICAgdGhpcy5fam9iID0gam9iU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9vcGVuID0gdGhpcy5vcGVuKCk7XHJcbiAgICB0aGlzLl9jbG9zZSA9IHRoaXMuY2xvc2UoKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzID0gdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25Db25maWcgPSBnZXRWYWxpZGF0aW9uKFxyXG4gICAgICBwb3B1cFByb2ZpbGVGb3JtLFxyXG4gICAgICBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgICAgXCIucG9wdXBfX2J1dHRvblwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1WYWxpZGF0b3JVc2VySW5mbyA9IG5ldyBCYXNlRm9ybVZhbGlkYXRvcihcclxuICAgICAgdmFsaWRhdGlvbkNvbmZpZyxcclxuICAgICAgcG9wdXBQcm9maWxlRm9ybVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLl9mb3JtVmFsaWRhdG9yVXNlckluZm8uZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gIH1cclxuXHJcbiAgX2dldFVzZXJJbmZvID0gKGV2dCkgPT4ge1xyXG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLl9uYW1lLnBsYWNlaG9sZGVyID0gXCJJbnNpcmEgbyBOb21lIGRvIFVzdcOhcmlvXCI7XHJcbiAgICB0aGlzLl9qb2IucGxhY2Vob2xkZXIgPSBcIkluc2lyYSBhIHN1YSBQcm9maXNzw6NvXCI7XHJcbiAgICB0aGlzLl9vcGVuKCk7XHJcbiAgICBwb3B1cFByb2ZpbGVGb3JtLnJlc2V0KCk7XHJcbiAgICB0aGlzLl9mb3JtVmFsaWRhdG9yVXNlckluZm8uZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gIH07XHJcblxyXG4gIF9zZXRVc2VySW5mbyA9IChldnQpID0+IHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgY29uc3QgeyB2YWx1ZTogbmFtZUlucHV0IH0gPSB0aGlzLl9uYW1lO1xyXG4gICAgY29uc3QgeyB2YWx1ZTogam9iSW5wdXQgfSA9IHRoaXMuX2pvYjtcclxuICAgIGlmIChuYW1lSW5wdXQgJiYgam9iSW5wdXQpIHtcclxuICAgICAgYWRkTmV3UHJvZmlsZShuYW1lSW5wdXQsIGpvYklucHV0KTtcclxuICAgICAgdGhpcy5fY2xvc2UoKTtcclxuICAgICAgbmFtZU91dHB1dFByb2ZpbGUudGV4dENvbnRlbnQgPSBuYW1lSW5wdXQ7XHJcbiAgICAgIGpvYk91dHB1dFByb2ZpbGUudGV4dENvbnRlbnQgPSBqb2JJbnB1dDtcclxuICAgICAgcG9wdXBQcm9maWxlRm9ybS5yZXNldCgpO1xyXG4gICAgICB0aGlzLl9mb3JtVmFsaWRhdG9yVXNlckluZm8uZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIF9nZXRCdXR0b25zRm9yRnVuY3Rpb25zVXNlckluZm8gPSAoKSA9PiAoe1xyXG4gICAgXCJidXR0b24tZWRpdFwiOiB0aGlzLl9nZXRVc2VySW5mbyxcclxuICAgIHBvcHVwX19idXR0b246IHRoaXMuX3NldFVzZXJJbmZvLFxyXG4gIH0pO1xyXG5cclxuICBfaGFuZGxlQnV0dG9uc0ZvckZ1bmN0aW9uc1VzZXJJbmZvID0gKGV2dCkgPT5cclxuICAgIGFkZEV2dEJ1dHRvbnNGb3JGdW5jdGlvbnModGhpcy5fZ2V0QnV0dG9uc0ZvckZ1bmN0aW9uc1VzZXJJbmZvKCksIGV2dCk7XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzVXNlckluZm9Ub0RPTSA9ICgpID0+IHtcclxuICAgIHRoaXMuX29wZW4oKTtcclxuICAgIHRoaXMuX2Nsb3NlKCk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycztcclxuICAgIGFkZEV2ZW50VG9ET00oXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVCdXR0b25zRm9yRnVuY3Rpb25zVXNlckluZm8sIGRvY3VtZW50KTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xyXG5pbXBvcnQgQmFzZUZvcm1WYWxpZGF0b3IgZnJvbSBcIi4vRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGFkZEV2dEJ1dHRvbnNGb3JGdW5jdGlvbnMsXHJcbiAgYWRkRXZlbnRUb0RPTSxcclxuICBnZXRWYWxpZGF0aW9uLFxyXG59IGZyb20gXCIuLi91dGlscy9oZWxwZXJzLmpzXCI7XHJcbmltcG9ydCB7XHJcbiAgYWRkTmV3Q2FyZCxcclxuICBwb3B1cENhcmRBZGRGb3JtLFxyXG4gIHBsYWNlSW5wdXRDYXJkQWRkLFxyXG4gIGltZ0xpbmtJbnB1dENhcmRBZGQsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgbGlua1NlbGVjdG9yIH0pIHtcclxuICAgIHN1cGVyKFwiLnBvcHVwX2NhcmQtYWRkXCIpO1xyXG4gICAgdGhpcy5fbmFtZSA9IG5hbWVTZWxlY3RvcjtcclxuICAgIHRoaXMuX2xpbmsgPSBsaW5rU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9vcGVuID0gdGhpcy5vcGVuKCk7XHJcbiAgICB0aGlzLl9jbG9zZSA9IHRoaXMuY2xvc2UoKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzID0gdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25Db25maWcgPSBnZXRWYWxpZGF0aW9uKFxyXG4gICAgICBwb3B1cENhcmRBZGRGb3JtLFxyXG4gICAgICBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgICAgXCIucG9wdXBfX2J1dHRvblwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1WYWxpZGF0b3JQb3B1cFdpdGhGb3JtID0gbmV3IEJhc2VGb3JtVmFsaWRhdG9yKFxyXG4gICAgICB2YWxpZGF0aW9uQ29uZmlnLFxyXG4gICAgICBwb3B1cENhcmRBZGRGb3JtXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1WYWxpZGF0b3JQb3B1cFdpdGhGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcyA9IChldnQpID0+IHtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcGxhY2VJbnB1dENhcmRBZGQucGxhY2Vob2xkZXIgPSBcIkluc2lyYSBvIE5vbWUgZG8gTG9jYWxcIjtcclxuICAgIGltZ0xpbmtJbnB1dENhcmRBZGQucGxhY2Vob2xkZXIgPSBcIkluc2lyYSBvIFVSTCBkYSBJbWFnZW1cIjtcclxuICAgIHRoaXMuX29wZW4oKTtcclxuICAgIHBvcHVwQ2FyZEFkZEZvcm0ucmVzZXQoKTtcclxuICAgIHRoaXMuX2Zvcm1WYWxpZGF0b3JQb3B1cFdpdGhGb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuICB9O1xyXG5cclxuICBfc2V0SW5wdXRWYWx1ZXMgPSAoZXZ0KSA9PiB7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IHsgdmFsdWU6IG5hbWUgfSA9IHBsYWNlSW5wdXRDYXJkQWRkO1xyXG4gICAgY29uc3QgeyB2YWx1ZTogbGluayB9ID0gaW1nTGlua0lucHV0Q2FyZEFkZDtcclxuICAgIGlmIChuYW1lICYmIGxpbmspIHtcclxuICAgICAgYWRkTmV3Q2FyZChuYW1lLCBsaW5rKTtcclxuICAgICAgQ2FyZC5hZGROZXdDYXJkVG9ET00oKTtcclxuICAgICAgdGhpcy5fY2xvc2UoKTtcclxuICAgICAgcG9wdXBDYXJkQWRkRm9ybS5yZXNldCgpO1xyXG4gICAgICB0aGlzLl9mb3JtVmFsaWRhdG9yUG9wdXBXaXRoRm9ybS5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX2dldEJ1dHRvbnNGb3JGdW5jdGlvbnNQb3B1cFdpdGhGb3JtID0gKCkgPT4gKHtcclxuICAgIFwiYnV0dG9uLWFkZFwiOiB0aGlzLl9nZXRJbnB1dFZhbHVlcyxcclxuICAgIFwicG9wdXBfX2J1dHRvbl9jYXJkLWFkZFwiOiB0aGlzLl9zZXRJbnB1dFZhbHVlcyxcclxuICB9KTtcclxuXHJcbiAgX2hhbmRsZUJ1dHRvbnNGb3JGdW5jdGlvbnNQb3B1cFdpdGhGb3JtID0gKGV2dCkgPT5cclxuICAgIGFkZEV2dEJ1dHRvbnNGb3JGdW5jdGlvbnModGhpcy5fZ2V0QnV0dG9uc0ZvckZ1bmN0aW9uc1BvcHVwV2l0aEZvcm0oKSwgZXZ0KTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnNQb3B1cFdpdGhGb3JtVG9ET00gPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9vcGVuKCk7XHJcbiAgICB0aGlzLl9jbG9zZSgpO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnM7XHJcbiAgICBhZGRFdmVudFRvRE9NKFxyXG4gICAgICBcImNsaWNrXCIsXHJcbiAgICAgIHRoaXMuX2hhbmRsZUJ1dHRvbnNGb3JGdW5jdGlvbnNQb3B1cFdpdGhGb3JtLFxyXG4gICAgICBkb2N1bWVudFxyXG4gICAgKTtcclxuICB9O1xyXG59XHJcbiIsImltcG9ydCB7IGdldEVsZW1lbnQgfSBmcm9tIFwiLi4vdXRpbHMvaGVscGVycy5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZ2V0RWxlbWVudChjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBcIi4vc3R5bGVzL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQge1xyXG4gIG5hbWVJbnB1dFByb2ZpbGUsXHJcbiAgam9iSW5wdXRQcm9maWxlLFxyXG4gIHBsYWNlSW5wdXRDYXJkQWRkLFxyXG4gIGltZ0xpbmtJbnB1dENhcmRBZGQsXHJcbiAgYWxsQ2FyZHMsXHJcbn0gZnJvbSBcIi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCB7IENhcmQsIGFkZEV2ZW50c0NhcmRzVG9ET00gfSBmcm9tIFwiLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xyXG4gIG5hbWVTZWxlY3RvcjogbmFtZUlucHV0UHJvZmlsZSxcclxuICBqb2JTZWxlY3Rvcjogam9iSW5wdXRQcm9maWxlLFxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwV2l0aEZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgbmFtZVNlbGVjdG9yOiBwbGFjZUlucHV0Q2FyZEFkZCxcclxuICBqb2JTZWxlY3RvcjogaW1nTGlua0lucHV0Q2FyZEFkZCxcclxufSk7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZSgpO1xyXG5cclxuY29uc3QgY2FyZHNTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGFsbENhcmRzLFxyXG4gICAgcmVuZGVyZXI6IChjYXJkKSA9PiB7XHJcbiAgICAgIGNvbnN0IG5ld0NhcmRJbnN0YW5jZSA9IG5ldyBDYXJkKGNhcmQsIFwiI2NhcmRzLXRlbXBsYXRlXCIpO1xyXG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IG5ld0NhcmRJbnN0YW5jZS5nZW5lcmF0ZUluc3RhbmNlQ2FyZCgpO1xyXG4gICAgICBjYXJkc1NlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgXCIuY2FyZHNcIlxyXG4pO1xyXG5cclxuY29uc3QgYWRkQ2FyZHNUb0RPTSA9ICgpID0+IHtcclxuICBjYXJkc1NlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxufTtcclxuXHJcbmNvbnN0IGFkZENvbnRlbnRUb0RPTSA9ICgpID0+IHtcclxuICB1c2VySW5mby5zZXRFdmVudExpc3RlbmVyc1VzZXJJbmZvVG9ET00oKTtcclxuICBwb3B1cFdpdGhGb3JtLnNldEV2ZW50TGlzdGVuZXJzUG9wdXBXaXRoRm9ybVRvRE9NKCk7XHJcbiAgcG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnNQb3B1cFdpdGhJbWFnZVRvRE9NKCk7XHJcbiAgYWRkQ2FyZHNUb0RPTSgpO1xyXG4gIGFkZEV2ZW50c0NhcmRzVG9ET00oKTtcclxufTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGFkZENvbnRlbnRUb0RPTSk7XHJcbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInAiLCJnZXRBbGxBcnJzIiwibmV3QXJyIiwiaW5pdGlhbEFyciIsImNvbmNhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsIm1hcCIsIml0ZW0iLCJfb2JqZWN0U3ByZWFkIiwiZ2V0RWxlbWVudCIsInNlbGVjdG9yIiwiZG9jdW1lbnQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJjYWxsSWZGdW5jdGlvbiIsImNhbGxiYWNrIiwic3R5bGVEaXNwbGF5VmFsdWUiLCJkaXNwbGF5VmFsdWUiLCJ0YXJnZXRFbGVtZW50Iiwic3R5bGUiLCJkaXNwbGF5IiwiY29udGFpbnMiLCJ0YXJnZXRDbGFzc05hbWUiLCJjbGFzc0xpc3QiLCJhbmltYXRlT3BhY2l0eSIsInN0YXJ0T3BhY2l0eSIsImVuZE9wYWNpdHkiLCJkdXJhdGlvbiIsInJlbW92ZU9uRmluaXNoIiwiYW5pbWF0ZSIsIm9wYWNpdHkiLCJlYXNpbmciLCJvbmZpbmlzaCIsInJlbW92ZSIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiYXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiZ2V0U3RhcnRzV2l0aERvdCIsInN0cmluZyIsInN0YXJ0c1dpdGgiLCJyZW1vdmVTdGFydGluZ0RvdCIsInNsaWNlIiwiZXZ0VGFyZ2V0Q2xvc2VzdEVsZW1lbnQiLCJjbG9zZXN0IiwiaXNUYXJnZXRFbGVtZW50Q2xpY2tlZCIsImFkZEV2ZW50VG9ET00iLCJldnQiLCJoYW5kbGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFkZEV2dEJ1dHRvbnNGb3JGdW5jdGlvbnMiLCJidXR0b25GdW5jdGlvbnMiLCJidXR0b25GdW5jdGlvbklkIiwidGFyZ2V0IiwiaWQiLCJnZXRWYWxpZGF0aW9uIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfb3BlblBvcHVwUHJvZmlsZSRwb3AiLCJvcGVuUG9wdXBQcm9maWxlIiwicG9wdXBQcm9maWxlIiwicG9wdXBQcm9maWxlRm9ybSIsIm5hbWVJbnB1dFByb2ZpbGUiLCJqb2JJbnB1dFByb2ZpbGUiLCJuYW1lT3V0cHV0UHJvZmlsZSIsImpvYk91dHB1dFByb2ZpbGUiLCJidG5TdWJtaXRQcm9maWxlIiwiYnRuQ2xvc2VQcm9maWxlIiwiYnRuRWRpdFByb2ZpbGUiLCJpbml0aWFsUHJvZmlsZSIsIm5hbWUiLCJ0ZXh0Q29udGVudCIsImpvYiIsIm5ld1Byb2ZpbGVzIiwiYWxsUHJvZmlsZXMiLCJfb3BlblBvcHVwQ2FyZEFkZCRwb3AiLCJvcGVuUG9wdXBDYXJkQWRkIiwicG9wdXBDYXJkQWRkIiwicG9wdXBDYXJkQWRkRm9ybSIsInBvcHVwQ2FyZEFkZEJ1dHRvblN1Ym1pdCIsInBsYWNlSW5wdXRDYXJkQWRkIiwiaW1nTGlua0lucHV0Q2FyZEFkZCIsImluaXRpYWxDYXJkcyIsImxpbmsiLCJhbHQiLCJuZXdDYXJkcyIsImFsbENhcmRzIiwicmV2ZXJzZSIsImhlYXJ0SWNvbkVuYWJsZWQiLCJyZXF1aXJlIiwiaGVhcnRJY29uRGlzYWJsZWQiLCJfb3BlblBvcHVwQ2FyZEltZyRwb3AiLCJvcGVuUG9wdXBDYXJkSW1nIiwicG9wdXBDYXJkSW1nT3BlbiIsInBvcHVwQ2FyZEltZyIsInBvcHVwQ2FyZE5hbWUiLCJQb3B1cCIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2RlZmluZVByb3BlcnR5IiwiYWRkIiwiX29wZW5lZENsYXNzTmFtZSIsIl9wb3B1cEVsZW1lbnQiLCJyZW1vdmVQb3B1cEZ1bmMiLCJfY3JlYXRlQ2FsbGJhY2tSZW1vdmVEaXNwbGF5Iiwia2V5IiwiX3BvcHVwRWxlbWVudFdpdGhvdXREb3QiLCJpc09wZW4iLCJhZGRQb3B1cERpc3BsYXkiLCJfY3JlYXRlQ2FsbGJhY2tBZGREaXNwbGF5IiwicmVtb3ZlUG9wdXBEaXNwbGF5IiwiX2hhbmRsZUVzY0Nsb3NlIiwiX2hhbmRsZU91dHNpZGVDbGlja0Nsb3NlIiwiX2dldENsb3NlQnV0dG9uc0FuZEFkZEV2ZW50TGlzdGVuZXIiLCJ0aGlzIiwiX2Nsb3NlQnV0dG9ucyIsIkFycmF5IiwiZnJvbSIsInZhbHVlIiwiX3RoaXMyIiwiZm9yRWFjaCIsImJ1dHRvbiIsImNsb3NlIiwiUG9wdXBXaXRoSW1hZ2UiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiY2FsbCIsIl9zZXRFdmVudExpc3RlbmVycyIsInNldEV2ZW50TGlzdGVuZXJzIiwiX3NldEV2ZW50TGlzdGVuZXJDYXJkIiwiQ2FyZCIsInByb3RvdHlwZSIsInNldEV2ZW50TGlzdGVuZXJGcm9tUG9wdXBXaXRoSW1hZ2UiLCJvcGVuIiwiZGF0YSIsInRlbXBsYXRlU2VsZWN0b3IiLCJfZGF0YSIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2NhcmRFbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX2NhcmRJbWFnZSIsInF1ZXJ5U2VsZWN0b3IiLCJfY2FyZFRpdGxlIiwiX3BvcHVwV2l0aEltYWdlIiwiY2FyZHMiLCJjYXJkIiwiX25ld0NhcmRJbnN0YW5jZSIsImdlbmVyYXRlSW5zdGFuY2VDYXJkIiwiX2NhcmRzU2VjdGlvbiIsIl9uZXdDYXJkVG9ET00iLCJyZW5kZXJDYXJkcyIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwic3JjIiwiaGFuZGxlSGVhcnRDYXJkTGlrZSIsInRhcmdldFNlbGVjdG9yIiwiaWNvbkVuYWJsZWRTcmMiLCJpY29uRGlzYWJsZWRTcmMiLCJpY29uRW5hYmxlZEFsdCIsImljb25EaXNhYmxlZEFsdCIsImlzQWN0aXZlIiwiZ2V0QXR0cmlidXRlIiwiaGFuZGxlTGlrZUZ1bmN0aW9uIiwiaGFuZGxlQ2FyZERlbGV0ZSIsImRlbGV0ZUJ1dHRvblNlbGVjdG9yIiwiY2FyZERlbGV0ZSIsImhhbmRsZURlbGV0ZUZ1bmN0aW9uIiwiX3Nob3dJbnB1dEVycm9yIiwiV2Vha1NldCIsIl9oaWRlSW5wdXRFcnJvciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfaGFzSW52YWxpZElucHV0IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiQmFzZUZvcm1WYWxpZGF0b3IiLCJ2YWxpZGF0aW9uQ29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfY2xhc3NQcml2YXRlTWV0aG9kSW5pdFNwZWMiLCJfdmFsaWRhdGlvbkNvbmZpZyIsIl9mb3JtRWxlbWVudCIsIl9QVF9CUl9FUlJPUl9NRVNTQUdFUyIsInZhbHVlTWlzc2luZyIsInR5cGVNaXNtYXRjaCIsImVtYWlsIiwidXJsIiwidG9vU2hvcnQiLCJ0b29Mb25nIiwicGF0dGVybk1pc21hdGNoIiwiaW5wdXRMaXN0IiwicXVlcnlTZWxlY3RvckFsbCIsImJ1dHRvbkVsZW1lbnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9jbGFzc1ByaXZhdGVNZXRob2RHZXQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUyIiwiaW5wdXRFbGVtZW50IiwiX3NldEV2ZW50TGlzdGVuZXJzMiIsIl9zaG93SW5wdXRFcnJvcjIiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJlcnJvclR5cGUiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInB0QnJFcnJvck1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IyIiwiX2NoZWNrSW5wdXRWYWxpZGl0eTIiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hhc0ludmFsaWRJbnB1dDIiLCJzb21lIiwiVXNlckluZm8iLCJfcmVmIiwibmFtZVNlbGVjdG9yIiwiam9iU2VsZWN0b3IiLCJfbmFtZSIsInBsYWNlaG9sZGVyIiwiX2pvYiIsIl9vcGVuIiwicmVzZXQiLCJfZm9ybVZhbGlkYXRvclVzZXJJbmZvIiwiZW5hYmxlVmFsaWRhdGlvbiIsIm5ld1Byb2ZpbGUiLCJuYW1lSW5wdXQiLCJqb2JJbnB1dCIsInByb2ZpbGUiLCJjcmVhdGVOZXdQcm9maWxlIiwiX2Nsb3NlIiwiX2dldFVzZXJJbmZvIiwicG9wdXBfX2J1dHRvbiIsIl9zZXRVc2VySW5mbyIsIl9nZXRCdXR0b25zRm9yRnVuY3Rpb25zVXNlckluZm8iLCJfaGFuZGxlQnV0dG9uc0ZvckZ1bmN0aW9uc1VzZXJJbmZvIiwiUG9wdXBXaXRoRm9ybSIsImxpbmtTZWxlY3RvciIsIl9mb3JtVmFsaWRhdG9yUG9wdXBXaXRoRm9ybSIsIm5ld0NhcmQiLCJjcmVhdGVOZXdDYXJkIiwiYWRkTmV3Q2FyZCIsImFkZE5ld0NhcmRUb0RPTSIsIl9nZXRJbnB1dFZhbHVlcyIsIl9zZXRJbnB1dFZhbHVlcyIsIl9nZXRCdXR0b25zRm9yRnVuY3Rpb25zUG9wdXBXaXRoRm9ybSIsIl9oYW5kbGVCdXR0b25zRm9yRnVuY3Rpb25zUG9wdXBXaXRoRm9ybSIsIl9saW5rIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJlbGVtZW50IiwicHJlcGVuZCIsInVzZXJJbmZvIiwicG9wdXBXaXRoRm9ybSIsInBvcHVwV2l0aEltYWdlIiwiY2FyZHNTZWN0aW9uIiwiY2FyZEVsZW1lbnQiLCJhZGRJdGVtIiwic2V0RXZlbnRMaXN0ZW5lcnNVc2VySW5mb1RvRE9NIiwic2V0RXZlbnRMaXN0ZW5lcnNQb3B1cFdpdGhGb3JtVG9ET00iLCJzZXRFdmVudExpc3RlbmVyc1BvcHVwV2l0aEltYWdlVG9ET00iLCJyZW5kZXJJdGVtcyIsImFkZEV2ZW50c0NhcmRzVG9ET00iXSwic291cmNlUm9vdCI6IiJ9